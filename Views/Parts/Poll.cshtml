@using Cascade.Poll.Models
    @{
        Script.Require("jQuery");
        Script.Require("CascadePoll").AtFoot();
        Style.Require("Poll");

    }
    <div class="poll-container">
        @if (Model.Poll != null)
        {
            IEnumerable<PollAnswerRecord> answers = Model.Poll.Answers;

            <h4 class="poll-question">@Model.Poll.Question</h4>
            if (Model.CanVote)
            {
                using (Html.BeginFormAntiForgeryPost())
                {
                    <ul class="poll-answers">
                        @foreach (var answer in answers)
                        {
                            <li>
                                <input id="poll-answer-@answer.Id" type="radio" value="@answer.Id" name="answers" />
                                <label for="poll-answer-@answer.Id">@answer.Answer</label>
                            </li>
                        }
                    </ul>
                    <input type="hidden" name="pollId" value="@Model.Poll.Id" />
                    <button data-pollid="@Model.Poll.Id" class="pollVote btn btn-primary" id="pollVote-@Model.Poll.Id" type="button">@T("Vote")</button>
                }
            }
            else
            {
                <ul class="poll-results">
                    @foreach (var answer in answers)
                    {
                        var TotalVotes = answers.Sum(a => a.Votes);
                        var Percent = 0;
                        if (TotalVotes > 0)
                        {
                            Percent = answer.Votes * 100 / TotalVotes;
                        }
                        <li>
                            <span>@answer.Answer (@Percent%)</span>
                            <div class="poll-bar" style="width:@Percent%" title="@answer.Answer (@Percent% / @answer.Votes)"></div>
                        </li>
                    }
                </ul>
            }
        }
    </div>